class Solution{
    public int minimizeCost(int stones[],int N,int K){
         int[] dp = new int[N];
        Arrays.fill(dp, -1);
        return helper(stones, N - 1, dp, K);
    }

    public int helper(int[] stones, int i, int[] dp, int K) {
        if (i == 0) return 0;
        if (dp[i] != -1) return dp[i];
        int minCost = Integer.MAX_VALUE;
        for (int j = 1; j <= K; j++) {
            if (i - j >= 0) {
                int cost = helper(stones, i - j, dp, K) + Math.abs(stones[i] - stones[i - j]);
                minCost = Math.min(minCost, cost);
            }
        }
        
        dp[i] = minCost;
        return dp[i];
    }
}
