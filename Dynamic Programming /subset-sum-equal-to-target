class Solution{
    static Boolean isSubsetSum(int n, int arr[], int t){
        // code here]
        int[][] dp = new int[n][t+1];
        for(int row[] : dp){
            Arrays.fill(row, -1);
        }
        return helper(n-1,t,arr,dp);
    }
    public static boolean helper(int i,int t, int[] arr,int[][] dp){
        if(t == 0) return true;
        if(i == 0) return arr[i] == t;
        if(dp[i][t] != -1) return dp[i][t] == 0 ? false : true;
        boolean nottake = helper(i-1,t,arr,dp);
        boolean take = false;
        if(arr[i] <= t){
            take = helper(i-1,t-arr[i],arr,dp);
        }
              dp[i][t] = nottake || take ? 1 : 0;
              return take || nottake;
    }
}

