class Solution {
     public int minDistance(String s1, String s2) {
        int n = s1.length();
        int m = s2.length();
        int[][] dp = new int[n + 1][m + 1];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return n + m - 2 * helper(n - 1, m - 1, s1, s2, dp);
    }

    private int helper(int i, int j, String s1, String s2, int[][] dp) {
        if (i < 0 || j < 0) return 0; 
        if (dp[i + 1][j + 1] != -1) return dp[i + 1][j + 1];
        if (s1.charAt(i) == s2.charAt(j)) {
            return dp[i + 1][j + 1] = 1 + helper(i - 1, j - 1, s1, s2, dp);
        } else {
            return dp[i + 1][j + 1] = Math.max(helper(i - 1, j, s1, s2, dp), helper(i, j - 1, s1, s2, dp));
        }
    }
}
