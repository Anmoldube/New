//User function Template for Java

//arr1,arr2 : the arrays
// n, m: size of arrays
class Solution
{
    //Function to return a list containing the union of the two arrays.
    public static ArrayList<Integer> findUnion(int arr1[], int arr2[], int n, int m)
    {
        // add your code her
        //  HashSet <Integer> freq=new HashSet<>();
        //  ArrayList<Integer> Union=new ArrayList<>();
        //  for(int i = 0 ;i < n; i++){
        //      freq.add(arr1[i]);
        //  }
        //  for(int i = 0 ;i < m; i++){
        //      freq.add(arr1[i]);
        //  }
        // for(int it : freq){
        //     Union.add(it);
        // }
        // return Union;
        ArrayList<Integer> Union = new ArrayList<>();
        int i = 0, j = 0;

        // Traverse both arrays
        while (i < n && j < m) {
            if (arr1[i] <= arr2[j]) {
                if (Union.size() == 0 || Union.get(Union.size() - 1) != arr1[i]) {
                    Union.add(arr1[i]);
                }
                i++;
            } else {
                if (Union.size() == 0 || Union.get(Union.size() - 1) != arr2[j]) {
                    Union.add(arr2[j]);
                }
                j++;
            }
        }

        // If there are remaining elements in arr1
        while (i < n) {
            if (Union.get(Union.size() - 1) != arr1[i]) {
                Union.add(arr1[i]);
            }
            i++;
        }

        // If there are remaining elements in arr2
        while (j < m) {
            if (Union.get(Union.size() - 1) != arr2[j]) {
                Union.add(arr2[j]);
            }
            j++;
        }

        return Union;
    }
}
