class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int n = cost.length;
        int[] dp = new int[n];
        Arrays.fill(dp, -1);
        // Start climbing from the 0th step or the 1st step
       // return Math.min(climb(cost, 0, dp), climb(cost, 1, dp));
       return climb(cost);
    }

    public int climb(int[] cost) {
        int[] dp = new int[cost.length];
        dp[0] = cost[0];
        dp[1] = cost[1];
        for(int i = 2; i < dp.length; i++){
        int f = dp[i-1];
        int s = dp[i-2];
        dp[i] = Math.min(f, s) + cost[i];
          }
            return Math.min(dp[dp.length-1],dp[dp.length-2]);
    }
}
