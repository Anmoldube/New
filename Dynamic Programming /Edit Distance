class Solution {
    public int minDistance(String s1, String s2) {
        int[][] dp = new int[s1.length()+1][s2.length()+1];
        for(int row[] : dp){
            Arrays.fill(row,-1);
        }
        return helper(0,0,s1,s2,dp);
    }
    public int helper(int i,int j, String s1,String s2,int[][]dp){
        if(i == s1.length()){
            return s2.length()-j;
        }
        if(j == s2.length()){
            return s1.length()-i;
        }
        if(dp[i][j] != -1) 
        {return dp[i][j];}
        int ans;
        if(s1.charAt(i) == s2.charAt(j)){
            ans = helper(i+1,j+1,s1,s2,dp);
        } else {
            int del =  helper(i+1,j,s1,s2,dp);
            int in =  helper(i,j+1,s1,s2,dp);
            int rep =  helper(i+1,j+1,s1,s2,dp);
            ans = Math.min(rep,Math.min(in,del))+1;
        }
        return dp[i][j] = ans;
    }
}
