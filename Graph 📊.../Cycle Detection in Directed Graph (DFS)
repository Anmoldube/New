class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int n, ArrayList<ArrayList<Integer>> adj) {
       int[] vis = new int[n];
        int[] pathvis = new int[n];
        for(int i = 0; i < n; i++){
            if(vis[i] == 0){
                if(dfs(i,adj,vis,pathvis)==true) return true;
            }
        }
        return false;
    }
  static private boolean dfs(int node, ArrayList<ArrayList<Integer>> adj,int[] vis, int[] pathvis){
        vis[node] = 1;
        pathvis[node] = 1;
        for(int it : adj.get(node)){
            if(vis[it] == 0){
                if(dfs(it,adj,vis,pathvis) == true) return true;
            } else if(pathvis[it] == 1){
                return true;
            }
        }
        pathvis[node] = 0;
        return false;
    }
}
