class reversing{
public static void main(String[] args) {
            int n = 779032489;
            int count  = 0;
            String str = "";
            while(n>0){
                 str = str + n%10;
                 n  = n/10;
                 count++;
            }
                 for (int i = str.length()-1; i >= 0; i--) {
                        System.out.println(str.charAt(i));
            }
            System.out.println("The number count is :" + count);
    }
}


import java.util.*;

class reversing{
public static void main(String[] args) {
            int n = 7789;
            GCD();
            MostObservation();
            System.out.println("The log function output is this:== "+logVala(n));
            System.out.println(Pali(n) + " This will tell Us");
            AllDivisors();
            int count  = 0;
            String str = "";
            while(n>0){
                 str = str + n%10;
                 n  = n/10;
                 count++;
                 System.err.println();
            }
                 for (int i = str.length()-1; i >= 0; i--) {
                        System.out.println(str.charAt(i));
            }
            System.out.println("The number count is: " + count);
    }
    public static void AllDivisors() {
    int temp = 36;
    for (int i = 1; i <=temp; i++) {
        if(temp%i == 0){
            System.out.print(i + " ");
        }
    }
}
    public static int logVala(int n){
                int count = (int)Math.log10(n) + 1;
                return count;
    }
    public static Boolean Pali(int n) {
        int sum = 0;
        int temp  = n;
        while(n>0){
           int rev =  n%10;
            sum = sum * 10 + rev;
            n = n/10;
        }
        if(sum == temp) return true;
        else
        return false;
    }
    public static void MostObservation(){
        int n =36;
        ArrayList<Integer> l = new ArrayList<>();
        for(int i =1; i<= Math.sqrt(n); i++){
            if(n%i == 0)
            l.add(i);
            if((n%i) != i){
                l.add(n/i);
            }
        }
        Collections.sort(l);
        for (int i = 1; i < l.size(); i++) {
            if(l.contains(i))
            l.remove(i);
        }
        for (Integer it : l) {
            if(it == it-1)
            l.remove(it);
            System.out.println(it);
        }
    }
    public static void GCD(){
            int n = 20;
            int n2 = 40;
            for (int i = Math.min(n, n2); i >= 1; i--) {
                if(n%i == 0 && n2 % i == 0){
                    System.out.println("the GCD IS: " + i);
                    break;
                }
            }
            int a = n;
            int b = n2;
            // by Eculider's Alg
            while(a > 0 & b >0 ){
                    if(a>b) a = a % b;
                    else b = b % a;
            }
            if(a == 0) System.out.println(b);
            System.out.println(a);
    }
}
