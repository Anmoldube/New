class Solution {
    public static int solve(int n, int k, int[] stalls) {
        Arrays.sort(satlls);
        int lo  = 0;
        int hi = stalls[n-1];
        int ans = 0;
       while(lo<=hi){
           int mid = (lo + hi) / 2; // Corrected calculation of mid
           if(ispossible(stalls,mid,k)==true){
               ans= mid ;
               lo = mid + 1;
           }
           else{
               hi = mid -1;
           }
       }
        return ans;
    }
   public static boolean ispossible(int[] stalls, int mid, int k){
       int cow = 1;
       int position = stalls[0];
       int i = 1;
       while(i<stalls.length){
           if(stalls[i] - position>=mid){
               cow++;
                   position = stalls[i];
           }
           if(cow==k){
               return true;
           }
           i++;
       }
       return false;
   }
}
