*Complete the function below
Node is as follows:
class Node{
	int data;
	Node left,right;
	
	Node(int key)
	{
	    data = key;
	    left = right = null;
	}
}

*/
class Solution {
    // Function to check whether all nodes of a tree have the value 
    // equal to the sum of their child nodes.
    public static int isSumProperty(Node root) {
        // Base case: If the node is null or a leaf node, return true.
        if (root == null || (root.left == null && root.right == null)) {
            return 1;
        }
        
        // Recursively check left and right subtrees.
        int leftSum = (root.left == null) ? 0 : root.left.data;
        int rightSum = (root.right == null) ? 0 : root.right.data;
        
        // Check if the current node's value is equal to the sum of its children.
        if (root.data != leftSum + rightSum) {
            return 0;
        }
        
        // Recursively check left and right subtrees.
        int leftResult = isSumProperty(root.left);
        int rightResult = isSumProperty(root.right);
        
        // If both subtrees satisfy the sum property, return true.
        return (leftResult == 1 && rightResult == 1) ? 1 : 0;
    }
}
