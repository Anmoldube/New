class Solution {
    public int longestCommonSubsequence(String s1, String s2) {
        int i = s1.length();
        int j = s2.length();
        int[][] dp = new int[i][j];
        for(int row[] : dp){
                Arrays.fill(row,-1);
        }
        return helper(i-1,j-1,s1,s2,dp);
    }
    public int helper(int i,int j,String s1, String s2,int[][] dp){
        if(i < 0 || j < 0)  return 0;
        if(dp[i][j] != -1){ return dp[i][j];}
        if(s1.charAt(i) == s2.charAt(j)) 
       return  dp[i][j] = 1 + helper(i-1,j-1,s1,s2,dp);
        else  return dp[i][j] = Math.max(helper(i,j-1,s1,s2,dp),helper(i-1,j,s1,s2,dp));
         //return dp[i][j];
    }
}
