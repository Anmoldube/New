class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int n, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] vis = new int[n];
        Stack<Integer> st = new Stack<Integer>();
        for(int i = 0; i < n; i++){
            if(vis[i] == 0){
                dfs(i,vis,adj,st);
            }
        }
        int ans[] = new int[n];
        int i = 0;
        while(!st.isEmpty()){
            ans[i++] = st.peek();
            st.pop();
        }
        return ans;
    }
     static private void dfs(int node, int[] vis, ArrayList<ArrayList<Integer>> adj, Stack<Integer> st) {
        vis[node] = 1;
        for (int it : adj.get(node)) {
            if (vis[it] == 0) {
                dfs(it, vis, adj, st);
            }
        }
        st.push(node);
    }
}
