class Solution {
    public List<Integer> eventualSafeNodes(int[][] graph) {
     int n = graph.length;
     List<Integer>  res = new ArrayList<>();
     if(n == 0 || graph == null) return res;
     int[] vis =  new int[n];
     for(int i = 0;i < n; i++){
        if(dfs(i,graph,vis))  res.add(i);
     }
     return res;
    }
    private boolean dfs(int node, int[][] graph,int[] vis){
        if(vis[node] != 0) return vis[node] == 1;
        vis[node] = 2;
        for(int it : graph[node]){
            if(!dfs(it,graph,vis)) return false; 
        }
        vis[node]  = 1;
        return true;
    }
}
